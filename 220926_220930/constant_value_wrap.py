# 자바 스크립트와 달리, 변수 선언 키워드(예약어)가 별도로 존재하지 않는 파이썬은, 작성법 상으로 변수와 상수를 구분하지 않습니다.
# 개발작업을 진행 할 수록 '상수'의 딱딱한 불변성(immutable)은 애프릴케이션의 안정성과 직결되기 때문에 활용도가 높은데, 자바스크립트의 const의 역할을 하는 작성법을 지원하지 않기 때문에, 개발자들 간의 암묵적인 관습으로 일차적인 해결을 진해앟고 있습니다. 
# 바로 파스칼케이스(pascal case:단어 첫글자 중간에 대문자), 어퍼케이스(upper case: 대문자 표기방식)하는 방식으로, 해당 코드가 '상수이다.'라는 것을 표시합니다. 
# 하지만 본질적으로는 상수의 기능자체가 없기 때문에 한계가 존재하는데, 이때 개발자들간의 불변성 조건을 활용하기 위한 대책들을 제시합니다. 

# 가장 첫번째로 자주 기용되고 있는 강제적인 상수의 형태를 만드는 방식, 모듈로 '상수'로 사용할 데이터를 따로 관리하는 방식입니다. 

# 자바스크립트처럼 내장 API가 이리저리 섞인(?) 상태가 아니기 때문에, 상당히 간결하고 간단한 편입니다.자바스크립트는 태초에 모듈 기능이 없었지만, 파이썬은 제작 설계 당시부터 제대로 된 프로그래밍 언어로서의 형태를 갖추었지 때문에 모듈작업이 상당히 간단합니다.

# 모듈데이터가 '상수'처럼 사용할 수 있는 것은 데이터를 가져오는 과정은 '불변'해야 하기 때문에, 직접 코드를 제어하는 것이 아니라면 데이터를 바꾸지 못하기 때문입니다. 모듈을 가져와서 사용하는 과정에서 '원본'을 훼손해서는 안되기 때문입니다. 코드 자체를 작성해주는 컴파일러와는 다른 개념입니다. 

# 상수로 사용할 변수들 선언(declaration)
A_VALUE = 1
B_VALUE = 2